#!/usr/bin/env sage

from tqdm import tqdm
from itertools import product
from gmpy2 import is_square, isqrt
from Crypto.Util.number import long_to_bytes, inverse

n = 94144887513744538681657844856583985690903055376400570170371837200724227314957348031684706936655253125445176582486308241015430205703156336248578475428712275706238423997982248462635972817633320331030484841129628650918661036694615254018290264619628335177
ct = 80250313885079761377138486357617323555591919111371649902793873860183455237161293320577683249054725852540874552433031133240624696119120378419135912301004715004977978507247634217071922495893934816945961054193052791946557226599493364850793396744903765857

for i in range(1, 5):
    for j in tqdm(list(product(range(3, 417 - 3), repeat = i))):
        A = -sum((1 << k) for k in j)
        delta = A**2 + 4 * n
        if is_square(delta):
            p = (-A + isqrt(delta)) // 2
            q = n // p
            d = inverse(65537, (p - 1) * (q - 1))
            pt = pow(ct, d, n)
            FLAG = long_to_bytes(pt)
            print(FLAG)
            exit(0)

# CCTF{5pArs3_dIfFeRenc3_f4ct0r1za7iOn_m3th0d!}