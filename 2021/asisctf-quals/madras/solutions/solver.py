#!/usr/bin/env python3

from z3 import *
from Crypto.Util.number import *

v = [4553352994596121904719118095314305574744898996748617662645730434291671964711800262656927311612741715902, 4414187148384348278031172865715942397786003125047353436418952679980677617016484927045195450392723110402, 2621331497797998680087841425011881226283342008022511638116013676175393387095787512291008541271355772802, 1235691098253903868470929520042453631250042769029968, 2235727505835415157472856687960365216626058343546572, 1197976933648163722609601772402895844093866589777721, 6238548897897912462708514382106387305984378113132192980353695746912882399991285268937548949835500837749446265632471076030233510866260067177632747513323223]

a, b, c = Int('a'), Int('b'), Int('c')

s = Solver()

s.add(a*b + c == v[0])
s.add(b*c + a == v[1])
s.add(c*a + b == v[2])

s.check()
res = s.model()

a = res[a].as_long()
b = res[b].as_long()
c = res[c].as_long()

N = a * b * c
phi = (a - 1) * (b - 1) * (c - 1)

d = inverse(65537, phi)

ct = v[-1]

pt = pow(ct, d, N)

print(long_to_bytes(pt))

# ASIS{m4dRa5_iZ_RSA_l1k3_cH41L3n9E?!!}